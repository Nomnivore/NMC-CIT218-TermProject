// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TermProject.Data;

#nullable disable

namespace TermProject.Migrations
{
    [DbContext(typeof(EventsContext))]
    [Migration("20221017020443_UpdateSeedData")]
    partial class UpdateSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TermProject.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MaxAttendees")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Come watch an awesome movie with us!",
                            EndDateTime = new DateTime(2022, 10, 22, 23, 0, 0, 0, DateTimeKind.Local),
                            GroupId = 3,
                            Location = "The movie theater",
                            MaxAttendees = 50,
                            Name = "Movie Night",
                            StartDateTime = new DateTime(2022, 10, 22, 20, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Description = "A 3-day event loaded with speakers, Q&A's, networking opportunities, and more! You won't want to miss this.",
                            EndDateTime = new DateTime(2022, 10, 28, 20, 0, 0, 0, DateTimeKind.Local),
                            GroupId = 1,
                            Location = "Large conference hall in Big City",
                            Name = "CIT Conference",
                            StartDateTime = new DateTime(2022, 10, 26, 11, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("TermProject.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AllowJoin")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowJoin = true,
                            Description = "The best events to learn about all things CIT & network with your peers!",
                            Name = "Comp Info Tech"
                        },
                        new
                        {
                            Id = 2,
                            AllowJoin = true,
                            Description = "It should be known - where there's us, there's pizza.",
                            Name = "PizzaSocial"
                        },
                        new
                        {
                            Id = 3,
                            AllowJoin = true,
                            Description = "Live sleep breathe popcorn",
                            Name = "Movie Madness"
                        });
                });

            modelBuilder.Entity("TermProject.Models.Event", b =>
                {
                    b.HasOne("TermProject.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
